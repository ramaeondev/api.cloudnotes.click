name: Deploy to AWS ECR

on:
  push:
    branches:
      - '*'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR Publicâ‰ˆ
        run: |
          aws ecr-public get-login-password --region ap-south-2 | \
          docker login --username AWS --password-stdin public.ecr.aws

      - name: Build, Tag, and Push Docker Image
        env:
            ECR_PUBLIC_REGISTRY: public.ecr.aws/r5p8n8t0/ramaeondev
            ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
            IMAGE_TAG: latest
        run: |
            docker build -t logit .
            docker tag logit $ECR_PUBLIC_REGISTRY/logit:$IMAGE_TAG
            docker push $ECR_PUBLIC_REGISTRY/logit:$IMAGE_TAGG
          
      - name: Set up SSH Key
        run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/ec2_key.pem
            chmod 600 ~/.ssh/ec2_key.pem
            ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: | 
            ssh -i ~/.ssh/ec2_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
                echo "Pulling the latest image..."
                docker pull public.ecr.aws/r5p8n8t0/ramaeondev/logit:latest || { echo "Image pull failed!"; exit 1; }
                
                echo "Stopping running containers..."
                docker stop $(docker ps -q) || true
                docker rm $(docker ps -aq) || true
                
                echo "Restarting application..."
                cd /home/ec2-user/logit_api/
                docker-compose down || { echo "Docker Compose down failed!"; exit 1; }
                docker-compose up -d || { echo "Docker Compose up failed!"; exit 1; }
            EOF