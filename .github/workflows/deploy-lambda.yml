name: Deploy to AWS ECR and Lambda

on:
  push:
    branches:
      - master
  workflow_dispatch:    

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ECR_REGISTRY: 061051237539.dkr.ecr.ap-south-2.amazonaws.com
      ECR_REPOSITORY: cloudnotes/fastapi
      IMAGE_TAG: latest
      AWS_REGION: ${{ env.AWS_REGION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

      - name: Build, Tag, and Push Docker Image        
        run: |
          docker build -t cloudnotes-lambda .
          docker tag cloudnotes-lambda:latest ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      # - name: Update AWS Lambda Function
      #   run: |
      #     aws lambda update-function-code \
      #       --region ${{ env.AWS_REGION }} \
      #       --function-name cloudnotes-fastapi \
      #       --image-uri ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
